<?php
/*   __________________________________________________
    |  Obfuscated by YAK Pro - Php Obfuscator  2.0.1   |
    |              on 2022-03-02 18:18:12              |
    |    GitHub: https://github.com/pk-fr/yakpro-po    |
    |__________________________________________________|
*/
/*
* Copyright (C) Incevio Systems, Inc - All Rights Reserved
* Unauthorized copying of this file, via any medium is strictly prohibited
* Proprietary and confidential
* Written by Munna Khan <help.zcart@gmail.com>, September 2018
*/
 namespace App\Http\Controllers\Admin; use App\Models\Package; use App\Http\Controllers\Controller; use App\Http\Requests\Validations\PackageInstallationRequest; use App\Services\PackageInstaller; use Illuminate\Http\Request; use Illuminate\Support\Facades\Artisan; use Illuminate\Support\Facades\Log; use Illuminate\Support\Facades\DB; class PackagesController extends Controller { public function index() { $installables = $this->scanPackages(); $installs = Package::all(); return view("\x61\x64\x6d\151\x6e\x2e\160\x61\143\x6b\x61\147\145\163\56\x69\156\x64\145\170", compact("\x69\x6e\x73\164\x61\154\154\x61\142\154\x65\x73", "\151\156\x73\164\141\154\x6c\x73")); } public function upload() { return view("\x61\144\x6d\x69\156\x2e\x70\141\143\153\x61\147\x65\x73\x2e\137\165\x70\x6c\157\141\x64"); } public function save(Request $request) { echo "\74\160\162\x65\x3e"; print_r($request->all()); echo "\74\x70\x72\145\76"; exit("\x65\156\x64\x21"); } public function initiate(Request $request, $package) { if (!(config("\141\160\160\56\x64\145\155\157") == true && config("\141\x70\x70\x2e\144\145\x62\x75\x67") !== true)) { goto KXAAp; } return back()->with("\x77\x61\162\x6e\x69\x6e\x67", trans("\155\x65\163\x73\x61\147\145\163\x2e\x64\145\x6d\157\137\162\145\x73\164\x72\x69\143\164\151\x6f\156")); KXAAp: $installable = $this->scanPackages($package); if (!$installable) { goto RQUbb; } if (!Package::where("\163\x6c\x75\147", $installable["\x73\x6c\x75\147"])->first()) { goto TVBvK; } return back()->with("\x65\x72\162\x6f\x72", trans("\x6d\x65\163\x73\x61\x67\145\x73\x2e\x70\141\x63\x6b\141\147\145\x5f\x69\156\163\x74\141\x6c\154\x65\x64\137\x61\x6c\x72\x65\x61\144\171", ["\x70\141\143\x6b\x61\x67\x65" => $package])); TVBvK: RQUbb: return view("\x61\x64\155\151\156\x2e\160\x61\x63\x6b\141\x67\x65\x73\56\x5f\151\156\151\164\151\141\164\145", compact("\151\156\163\164\141\154\154\x61\x62\154\x65")); } public function install(PackageInstallationRequest $request, $package) { if (!(config("\x61\160\160\56\x64\x65\155\157") == true && config("\141\x70\x70\x2e\x64\x65\142\x75\147") !== true)) { goto cdsn1; } return back()->with("\x77\x61\162\x6e\x69\x6e\x67", trans("\x6d\145\x73\x73\141\x67\145\x73\56\x64\x65\x6d\157\x5f\162\145\x73\x74\x72\x69\143\x74\x69\157\156")); cdsn1: $installable = $this->scanPackages($package); if (!$installable) { goto e9LXM; } try { $installer = new PackageInstaller($request, $installable); $installer->install(); } catch (\Exception $e) { Log::error($e); $installer->uninstall(); $registered = Package::where("\163\154\165\147", $package)->first(); if (!$registered) { goto KqVH8; } $registered->delete(); KqVH8: return back()->with("\x65\x72\162\x6f\x72", $e->getMessage()); } Artisan::call("\x63\x61\143\150\x65\72\143\154\145\x61\162"); Artisan::call("\162\x6f\165\x74\145\x3a\143\154\x65\141\x72"); return back()->with("\x73\x75\143\x63\145\x73\x73", trans("\x6d\x65\163\x73\x61\147\145\x73\x2e\x70\141\x63\x6b\x61\x67\145\137\151\x6e\x73\x74\x61\x6c\x6c\145\144\137\163\165\x63\143\145\163\x73", ["\x70\x61\x63\153\141\147\145" => $package])); e9LXM: return back()->with("\x65\162\x72\x6f\x72", trans("\155\145\x73\163\x61\x67\x65\163\x2e\x66\141\151\154\x65\x64")); } public function uninstall(Request $request, $package) { if (!(config("\141\x70\x70\56\144\145\155\x6f") == true && config("\x61\160\160\56\x64\145\x62\x75\147") !== true)) { goto ZWs4J; } return back()->with("\167\141\162\x6e\x69\156\x67", trans("\x6d\x65\x73\x73\141\147\145\x73\56\x64\x65\155\x6f\137\162\145\x73\x74\x72\x69\143\164\151\157\156")); ZWs4J: $registered = Package::where("\x73\154\x75\x67", $package)->firstOrFail(); $uninstallable = $this->scanPackages($package); try { $installer = new PackageInstaller($request, $uninstallable); DB::beginTransaction(); if (!$installer->uninstall()) { goto pectB; } Artisan::call("\143\141\x63\x68\145\72\x63\x6c\x65\x61\162"); Artisan::call("\162\157\165\164\145\72\x63\154\x65\x61\162"); if (!$registered->delete()) { goto F9eP_; } $msg = trans("\155\145\x73\163\141\x67\x65\x73\56\x70\141\143\153\141\147\x65\137\165\156\151\x6e\163\x74\141\x6c\x6c\145\x64\137\x73\165\143\143\x65\x73\x73", ["\x70\x61\143\x6b\141\x67\x65" => $package]); DB::commit(); return back()->with("\x73\165\x63\143\145\x73\163", $msg); F9eP_: pectB: } catch (\Exception $e) { DB::rollback(); Log::error($e); return back()->with("\x65\x72\162\157\x72", $e->getMessage()); } return back()->with("\x65\162\162\157\162", trans("\155\145\163\x73\141\147\145\x73\56\x66\x61\151\x6c\145\144")); } public function activation(Request $request, $package) { if (!(config("\x61\x70\x70\x2e\144\x65\x6d\157") == true && config("\141\160\x70\56\144\145\x62\165\x67") !== true)) { goto Tyi24; } return response("\145\162\162\157\162", 444); Tyi24: if (!($registered = Package::where("\163\x6c\165\147", $package)->first())) { goto NAdOh; } $registered->active = !$registered->active; $registered->save(); Artisan::call("\143\x61\x63\150\145\x3a\x63\154\145\141\x72"); return response("\x73\x75\143\143\x65\x73\x73", 200); NAdOh: $unregistered = $this->scanPackages($package); Log::info($unregistered); if (!$unregistered) { goto r9uPv; } $registered = Package::create($unregistered); r9uPv: return response("\x73\x75\x63\x63\145\163\x73", 200); } public function updateConfig(Request $request) { if (!updateOptionTable($request)) { goto Oukcl; } Artisan::call("\x63\141\143\150\x65\x3a\x63\x6c\x65\x61\162"); return back()->with("\163\x75\143\x63\145\x73\x73", trans("\155\x65\x73\163\141\147\x65\x73\x2e\160\141\143\x6b\141\x67\145\137\163\145\164\164\x69\156\x67\x73\x5f\165\x70\144\x61\164\145\x64")); Oukcl: return back()->with("\145\x72\x72\157\x72", trans("\x6d\145\163\x73\141\x67\x65\x73\x2e\x66\x61\x69\154\145\x64")); } public function toggleConfig(Request $request, $option) { if (!(config("\x61\x70\x70\56\x64\x65\x6d\157") == true && config("\141\x70\x70\56\x64\x65\x62\x75\x67") !== true)) { goto EzeR4; } return response("\145\x72\x72\157\x72", 444); EzeR4: if (!DB::table("\157\x70\x74\151\x6f\156\x73")->where("\x6f\x70\x74\x69\157\x6e\137\x6e\141\x6d\145", $option)->update(["\157\x70\164\x69\157\x6e\x5f\166\141\x6c\x75\x65" => DB::raw("\116\117\124\40\157\160\x74\151\x6f\x6e\137\x76\x61\x6c\x75\145")])) { goto V7oth; } Artisan::call("\143\141\143\150\145\x3a\x63\x6c\145\x61\x72"); return response("\x73\x75\143\143\x65\163\x73", 200); V7oth: return response("\x65\162\x72\157\x72", 405); } private function scanPackages($slug = null) { $packages = []; foreach (glob(base_path("\x70\x61\143\153\x61\147\145\x73\57\x2a"), GLOB_ONLYDIR) as $dir) { if (!file_exists($manifest = $dir . "\57\155\141\x6e\x69\x66\145\x73\x74\x2e\x6a\163\157\x6e")) { goto rM14u; } $json = file_get_contents($manifest); if (!($json !== '')) { goto uEOE2; } $data = json_decode($json, true); if (!($data === null)) { goto S1FBV; } throw new \Exception("\111\156\x76\x61\x6c\151\x64\x20\x6d\x61\156\x69\146\145\x73\x74\56\152\163\157\156\40\x66\151\x6c\145\x20\141\x74\40\x5b{$dir}\x5d"); S1FBV: $data["\160\x61\164\150"] = $dir; if (!($slug && $data["\163\x6c\165\147"] == $slug)) { goto U3Ed7; } return $data; U3Ed7: $packages[] = $data; uEOE2: rM14u: pELzl: } RTlqZ: return $packages; } }